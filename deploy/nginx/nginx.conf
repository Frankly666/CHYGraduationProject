worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 100M;

    # HTTP 到 HTTPS 重定向
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # HTTPS 服务器
    server {
        listen 443 ssl;
        server_name _;

        # 修正证书路径为 Nginx 标准路径
        ssl_certificate     /etc/nginx/ssl/cert.crt;
        ssl_certificate_key /etc/nginx/ssl/key.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        location /moonshotv1/ {
            proxy_pass https://api.moonshot.cn/v1/;
            proxy_set_header Host api.moonshot.cn;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_request_buffering off;
            proxy_http_version 1.1;
            proxy_connect_timeout 75s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # CORS 配置
            set $cors_origin '*';
            if ($http_origin ~* '^https?://(.+)$') {
                set $cors_origin $http_origin;
            }
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' '*' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        location / {
            return 200 'Nginx proxy is running.';
            add_header Content-Type text/plain;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            return 500 'Server error.';
            add_header Content-Type text/plain;
        }
    }
}